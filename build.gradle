plugins {
id "com.github.johnrengelman.shadow" version "5.2.0"
id "org.jetbrains.kotlin.jvm" version "1.3.50"
id "org.jetbrains.kotlin.kapt" version "1.3.50"
id "org.jetbrains.kotlin.plugin.allopen" version "1.3.50"
id "application"
}

application {
	mainClassName = 'org.gradle.sample.Main'
}
version "0.1"
group "com.tourspel.tourapp"
repositories {
mavenCentral()
	maven { url "https://jcenter.bintray.com" }
}
configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

ext {
	micronautDataVersion = "1.0.0.M5"

}

dependencies {

	annotationProcessor "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
	annotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
	annotationProcessor "io.micronaut:micronaut-inject-java:1.3.0.M1"
	kapt "io.micronaut:micronaut-inject-java:1.3.0.M1"

	compile "io.micronaut.configuration:micronaut-openapi"
	compile "io.micronaut.data:micronaut-data-processor:$micronautDataVersion"
	compile "io.micronaut:micronaut-validation"

	implementation "io.micronaut.data:micronaut-data-spring:$micronautDataVersion"
	implementation "org.springframework:spring-orm:5.2.0.RELEASE"
	implementation "io.micronaut.configuration:micronaut-flyway"
	implementation "io.micronaut.configuration:micronaut-hibernate-jpa"
	implementation "io.micronaut.configuration:micronaut-jdbc-tomcat"
	implementation "io.micronaut.data:micronaut-data-hibernate-jpa:$micronautDataVersion"
	implementation "io.micronaut.graphql:micronaut-graphql"
	implementation "io.micronaut:micronaut-http-client"
	implementation "io.micronaut:micronaut-http-server-netty"
	implementation "io.micronaut:micronaut-runtime"
	implementation "io.swagger.core.v3:swagger-annotations"
	implementation "javax.annotation:javax.annotation-api"
	implementation "org.jetbrains.kotlin:kotlin-reflect:${kotlinVersion}"
	implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:${kotlinVersion}"
	implementation platform("io.micronaut:micronaut-bom:$micronautVersion")

	kaptTest "io.micronaut:micronaut-inject-java:1.3.0.M1"
	runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
	runtimeOnly "com.fasterxml.jackson.module:jackson-module-kotlin:2.9.8"
	runtimeOnly "org.postgresql:postgresql:42.2.9"
	testAnnotationProcessor platform("io.micronaut:micronaut-bom:$micronautVersion")
	testCompile "org.junit.jupiter:junit-jupiter-api"
	testCompile "org.spekframework.spek2:spek-dsl-jvm:2.0.8"
	testRuntime "org.junit.jupiter:junit-jupiter-engine"
	testRuntime "org.spekframework.spek2:spek-runner-junit5:2.0.8"
}
test.classpath += configurations.developmentOnly
mainClassName = "@mainClassName@"
shadowJar {
    mergeServiceFiles()
}
run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')
test {
    useJUnitPlatform()
}
allOpen {
	annotation("io.micronaut.aop.Around")
}
compileKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    //Will retain parameter names for Java reflection
	    javaParameters = true 
	}
}
compileTestKotlin {
	kotlinOptions {
	    jvmTarget = '11'
	    javaParameters = true 
	}

mainClassName = "com.tourspel.tourapp.Application"
tasks.withType(JavaCompile){
	options.encoding = "UTF-8"
	options.compilerArgs.add('-parameters')
}
}
